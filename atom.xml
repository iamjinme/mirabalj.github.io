<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jinme - Compartiendo ideas libres]]></title>
  <link href="http://blog.jinme.org/atom.xml" rel="self"/>
  <link href="http://blog.jinme.org/"/>
  <updated>2013-09-12T10:39:32-04:30</updated>
  <id>http://blog.jinme.org/</id>
  <author>
    <name><![CDATA[Jinme]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Evitar y borrar el archivo libpeerconnection.log que crea Google Chrome]]></title>
    <link href="http://blog.jinme.org/2013/09/12/evitar-y-borrar-el-archivo-libpeerconnection-dot-log-que-crea-google-chrome/"/>
    <updated>2013-09-12T10:08:00-04:30</updated>
    <id>http://blog.jinme.org/2013/09/12/evitar-y-borrar-el-archivo-libpeerconnection-dot-log-que-crea-google-chrome</id>
    <content type="html"><![CDATA[<p>Hace unos días me percaté de un archivo <em>fantasma:</em> <code>libpeerconnection.log</code> que aparece en distintos directorios del disco duro donde tengo instalado Crunchbang, si lo borras vuelve a aparecer sobre todo en el $HOME. Investigando di con el <strong>culpable: Google Chrome</strong>. Acá te dejo la solución.</p>

<!--more-->


<p>Lo primero es abrir la consola <em>(o terminal)</em> del sistema y ejecutar <code>sudo nano /opt/google/chrome/google-chrome</code> o usar tu editor favorito: gedit, geany, vi <em>(sustituyendo a nano)</em>. Luego nos vamos al final del archivo que estamos editando, donde están las siguientes lineas:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">CHROME_VERSION_EXTRA</span><span class="o">=</span><span class="s2">&quot;stable&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># We don&#39;t want bug-buddy intercepting our crashes. http://crbug.com/24120</span>
</span><span class='line'><span class="nb">export </span><span class="nv">GNOME_DISABLE_CRASH_DIALOG</span><span class="o">=</span>SET_BY_GOOGLE_CHROME
</span><span class='line'>
</span><span class='line'><span class="nb">exec</span> -a <span class="s2">&quot;$0&quot;</span> <span class="s2">&quot;$HERE/chrome&quot;</span>  <span class="s2">&quot;$@&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Antes del comando <code>exec</code> escribimos <code>cd /tmp</code>, con lo cual Chrome creará en adelante el archivo en el directorio temporal de nuestra distribución. Quedaría algo como esto:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">CHROME_VERSION_EXTRA</span><span class="o">=</span><span class="s2">&quot;stable&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># We don&#39;t want bug-buddy intercepting our crashes. http://crbug.com/24120</span>
</span><span class='line'><span class="nb">export </span><span class="nv">GNOME_DISABLE_CRASH_DIALOG</span><span class="o">=</span>SET_BY_GOOGLE_CHROME
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nb">exec</span> -a <span class="s2">&quot;$0&quot;</span> <span class="s2">&quot;$HERE/chrome&quot;</span>  <span class="s2">&quot;$@&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Guardas el archivo <code>Ctrl + O</code>. Luego si deseas borrar todos estos archivos &ldquo;fantasmas&rdquo; en tu disco duro, lo puedes hacer con el siguiente <em>comando</em> en la consola.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo find -name libpeerconnection.log -exec rm -f <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Con esto me pude librar de esta molestia, espero que tu también. <strong>No olvides dejar tus comentarios.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Subdominio para tu router con DD-WRT en 3 pasos]]></title>
    <link href="http://blog.jinme.org/2013/09/11/subdominio-para-tu-router-con-dd-wrt-en-3-pasos/"/>
    <updated>2013-09-11T07:30:00-04:30</updated>
    <id>http://blog.jinme.org/2013/09/11/subdominio-para-tu-router-con-dd-wrt-en-3-pasos</id>
    <content type="html"><![CDATA[<p><em>¿Tienes tu propio dominio en Internet y un router en casa?</em> <strong>Este tutorial es para ti</strong>. Más de una vez he querido conectarme al router (o a un computador) en casa desde la oficina; con la molestia de tener que aprenderme el <strong>número mágico</strong> ya que mi proveedor de servicios no ofrece direcciones IP fijas y ademas que cambia estas constantemente, por lo cual es necesario usar algún servicio <a href="http://es.wikipedia.org/wiki/DNS_din%C3%A1mico">DDNS</a> y consecuentemente tener otro equipo encendido en casa que lo ejecute&hellip; <strong>hasta hoy</strong></p>

<!--more-->


<p><a href="http://es.wikipedia.org/wiki/DD-WRT">DD-WRT</a> es un firmware <strong>libre</strong> para diversos ruteadores inalámbricos, necesitas tenerlo instalado para seguir este tutorial, aunque <a href="http://www.polarcloud.com/tomato">Tomato</a> puede servir. También debes tener un dominio configurado con una cuenta en <a href="http://freedns.afraid.org/">FreeDNS</a>, sin embargo DD-WRT permite configurar otros servicios como DynDNS, ZoneEdit, NO-IP.com entre otros.</p>

<p><strong>Los pasos a seguir son:</strong></p>

<ol>
<li>Crear un subdominio en FreeDNS</li>
<li>Suministrar los datos de conexión al router</li>
<li>Guardar/Reiniciar el router</li>
</ol>


<h3>Creando un subdominio en FreeDNS</h3>

<p>Entramos con nuestra cuenta en FreeDNS, nos vamos a la sección <strong>Domains</strong>, seleccionamos el enlace <code>[ Manage ]</code> del dominio donde queremos trabajar y finalmente el enlace <code>[ add ]</code>. Escoges un subdominio Tipo A. Escribe el nombre del subdominio que desees en la sección <strong>Subdomain</strong>, por ejemplo: <em>router</em>, indicas la dirección IP actual del router en <strong>Destination</strong>, si no la sabes <a href="http://whatismyipaddress.com/">acá</a> la encontraras con el servicio <strong>What is my IP Address</strong>. Finalmente presionas el botón <strong>Save!</strong>.</p>

<p><img src="https://dl.dropboxusercontent.com/u/10635827/cdn/20130911-free-dns-afraid-sub-domain.png"></p>

<h3>Configurando el router</h3>

<p>Nos vamos a la página principal de configuración del router, <em>generalmente en 192.168.1.1</em>; en la sección <strong>Setup</strong> y la pestaña <strong>DDNS</strong> escogemos el <em>DDNS Service</em> que vamos a configurar, que para nuestro caso es <code>freedns.afraid.org</code> junto con las credenciales del mismo, así mismo le indicamos el <strong>hostname</strong> que es el nombre del subdominio creado anteriormente. Por último le indicamos el intervalo de actualización en días; si tu ISP cambia constantemente la dirección IP, te sugiero quitar el valor por defecto y colocar <strong>1 (uno)</strong>.</p>

<p><img src="https://dl.dropboxusercontent.com/u/10635827/cdn/20130911-dd-wrt-setup-ddns.png"></p>

<h3>Guardar/Reiniciar</h3>

<p>En la parte inferior de la página está el botón <strong>Save</strong>, lo presionas y solo queda esperar unos segundos mientras el router se conecta al servicio y actualiza la información tal como se muestra en la imagen superior. <em>Excelente!</em> con esto solo tendras que ingresar el nombre del subdominio configurado en el navegador y desde cualquier lugar podras acceder a tu router remotamente. Espero les haya gustado este tutorial en redes y si tienes alguna duda o sugerencia, deja tus comentarios.</p>

<p><strong>Happy Hacking!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Convertir un arreglo Javascript a CSV]]></title>
    <link href="http://blog.jinme.org/2013/09/06/convertir-un-arreglo-javascript-a-csv/"/>
    <updated>2013-09-06T09:13:00-04:30</updated>
    <id>http://blog.jinme.org/2013/09/06/convertir-un-arreglo-javascript-a-csv</id>
    <content type="html"><![CDATA[<p>Los archivos <a href="http://es.wikipedia.org/wiki/CSV">CSV</a> básicamente poseen un <strong>formato abierto</strong> que permite de manera sencilla el intercambio de información organizado tabularmente. Tal como se muestra en el ejemplo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>987,juan,87345,10 norte 342
</span><span class='line'>876,pedro,43649,8 oriente 342
</span><span class='line'>123,jorge,03342,av. libertad 23
</span></code></pre></td></tr></table></div></figure>


<p>A continuación explico como <strong>convertir los datos de un arreglo</strong> a este formato.</p>

<!--more-->


<p>Primeramente mostramos la información de un arreglo usando la función <code>valueOf()</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">frutas</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;manzana&#39;</span><span class="p">,</span> <span class="s1">&#39;duraznos&#39;</span><span class="p">,</span> <span class="s1">&#39;naranjas&#39;</span><span class="p">,</span> <span class="s1">&#39;mangos&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">frutas</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//print str: manzana,duraznos,naranjas,mangos</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como vemos el método convierte un arreglo javascript a un <em>string</em> usando la coma como separador, suficiente para compartirlo en un archivo CSV.</p>

<p>Ahora bien, si queremos usar el <em>pipe</em> <strong>(|)</strong> como separador, valido para el CSV; usaremos el método <code>join()</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">frutas</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;manzana&#39;</span><span class="p">,</span> <span class="s1">&#39;duraznos&#39;</span><span class="p">,</span> <span class="s1">&#39;naranjas&#39;</span><span class="p">,</span> <span class="s1">&#39;mangos&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="nx">frutas</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//print str: manzana|duraznos|naranjas|mangos</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>¿Interesante, no?</strong> espero en el futuro ir publicando más trucos en el blog, <em>siempre necesarios.</em> Deja tus comentarios si tienes algún <em>snippet</em> en particular.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo saber si un objeto JSON está vacío]]></title>
    <link href="http://blog.jinme.org/2013/08/27/como-saber-si-un-objeto-json-esta-vacio/"/>
    <updated>2013-08-27T08:13:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/27/como-saber-si-un-objeto-json-esta-vacio</id>
    <content type="html"><![CDATA[<p>Hace unos días leía un <em>tuit</em> con la pregunta que inspira este artículo, no especificaba el lenguaje de programación ni nada, así que me pareció ideal <strong>agregar todos</strong> los posibles lenguajes para resolver este problema tan común. Puedes obtener la solución o colaborar con otros dando la tuya en los comentarios, por ahora les dejo la de <strong>Javascript</strong>.</p>

<!--more-->


<h2>Javascript</h2>

<p>Puedes hacer una prueba creando una variable <code>var objeto = {}</code> y llamar a la función <code>isEmptyJSON(objeto)</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">isEmptyJSON</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">false</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>jQuery</h3>

<p>Si trabajas con <a href="http://jquery.com/">jQuery</a>, esta librería tiene la función <code>jQuery.isEmptyObject(objeto)</code> que puedes utilizar.</p>

<p>Recuerda que si tienes la solución en algún lenguaje de tu interés o la necesitas, <strong>deja tus comentarios</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Realizando vectores SVG con Javascript en 3 pasos]]></title>
    <link href="http://blog.jinme.org/2013/08/26/vectores-svg-en-3-pasos-con-javascript/"/>
    <updated>2013-08-26T08:42:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/26/vectores-svg-en-3-pasos-con-javascript</id>
    <content type="html"><![CDATA[<p>Algo que parecía imposible hace años era el uso de gráficos vectoriales o <a href="http://es.wikipedia.org/wiki/Scalable_Vector_Graphics">SVG</a> en el navegador. <strong>Hoy la historia es otra</strong>, sin embargo realizarlos pudiera resultar difícil al principio, <strong>hasta ahora</strong>. Y te lo explico en <strong>tres pasos</strong>.</p>

<!--more-->


<p><a href="http://raphaeljs.com/">Raphaël</a> es <em>una joya</em>, una pequeña librería en Javascript que simplifica trabajar con gráficos vectoriales en la web. Si deseas crear tu propio gráfico de barras, cortar una imagen o rotar un <em>widget</em> puedes hacerlo simple y fácilmente con esta librería.</p>

<ol>
<li>Bájate el pequeño archivo de <strong>31 Kb</strong> <a href="http://github.com/DmitryBaranovskiy/raphael/raw/master/raphael-min.js">acá</a></li>
<li>Incluye el <em>script</em> <code>raphael-min.js</code> en cualquier parte de tu archivo HTML</li>
<li>Finalmente incluyes el código en javascript para realizar tu gráfico vectorial, aquí crearemos un simple circulo que quedaria como sigue.</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;raphael-min.js&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Crea el canvas canvas (contenedor) de tamaño 320 × 200 en las coordenadas 10, 50</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">paper</span> <span class="o">=</span> <span class="nx">Raphael</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">200</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Crea un circulo en las coordenadas x = 50, y = 40, con radio 10</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">circle</span> <span class="o">=</span> <span class="nx">paper</span><span class="p">.</span><span class="nx">circle</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Configura el atributo de relleno del circulo a rojo (#f00)</span>
</span><span class='line'><span class="nx">circle</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span> <span class="s2">&quot;#f00&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Asignamos el atributo exterior del circulo a blanco</span>
</span><span class='line'><span class="nx">circle</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;stroke&quot;</span><span class="p">,</span> <span class="s2">&quot;#fff&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Pruebalo.</strong> Como veras es un proceso muy sencillo para crear gráficos SVG, claro está que tiene infinidad de elementos que puedes realizar, todos <a href="http://raphaeljs.com/reference.html">documentados</a> y hasta con variados <strong>ejemplos</strong> que puedes utilizar.</p>

<p>Para finalizar les indico que esta útil librería soporta Firefox 3.0+, Safari 3.0+, Chrome 5.0+, Opera 9.5+ y hasta Internet Explorer 6.0+</p>

<p><strong>La imaginación es el limite!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hospedar los archivos de tu sitio web en Dropbox]]></title>
    <link href="http://blog.jinme.org/2013/08/24/hospedar-los-archivos-de-tu-sitio-web-en-dropbox/"/>
    <updated>2013-08-24T10:58:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/24/hospedar-los-archivos-de-tu-sitio-web-en-dropbox</id>
    <content type="html"><![CDATA[<p>Ahora que he dado vida a este blog, estoy intentado <strong>mejorar el rendimiento</strong> del mismo <em>(si se puede)</em> a través de distintas herramientas o arquitecturas de redes disponibles. Se me ocurrió aplicar una especie de <a href="http://es.wikipedia.org/wiki/Red_de_entrega_de_contenidos">CDN</a>, pero para <strong>Octopress</strong>. Si estas buscando algo para Wordpress, existe en la red mucha información al respecto, como el uso de <a href="http://mvkoen.com/cdn-gratuito-de-jsdelivr-para-wordpress/">jsdelivr</a>.</p>

<!--more-->


<p>Actualmente uso <a href="https://github.com">Github</a> para alojar el blog, entonces ¿porque no usar un <strong>servicio gratuito</strong> como Dropbox para alojar todo lo que no sea HTML? como las imágenes, javascript, css, vídeos y documentos. Con estos pasos creamos una especie de <strong>seudo-CDN</strong> donde el contenido es distribuido a través de distintas redes disponibles <em>casi siempre</em>.</p>

<p><strong>Paso 1.</strong> <a href="https://www.dropbox.com/enable_public_folder">habilitar la carpeta pública</a> de Dropbox.</p>

<p><strong>Paso 2.</strong> subir los archivos necesarios (css, imagenes, javascript) a la carpeta pública.</p>

<p><strong>Paso 3.</strong> obtener el enlace público del archivo como se muestra en la imagen <em>(si usas la interfaz web)</em>.</p>

<p><img src="https://dl.dropboxusercontent.com/u/10635827/cdn/20130824-cdn-dropbox.png"></p>

<p>Como veras tengo los archivos alojados en una carpeta llamada <strong>cdn</strong> dentro de la carpeta pública, para tener un poco más de organización.</p>

<p><strong>Paso 4.</strong> por último solo debes hacer referencia en el código al enlace obtenido <code>https://dl.dropboxusercontent.com/enlace/al/archivo</code>, en el caso de imágenes y estilos se hace de la siguiente forma.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;https://dl.dropboxusercontent.com/u/143061433/cdn/0.jpg&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">href=</span><span class="s">&quot;https://dl.dropboxusercontent.com/u/143061433/cdn/style.css&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Para finalizar es importante leer los <em>términos de uso</em>, para evitar <strong>saturar</strong> el uso de tu cuenta en <strong>Dropbox</strong> y que te la puedan cancelar. No conozco ningún caso, pero si tu sitio es muy visitado mejor apúntate a algo más profesional como el servicio <a href="https://www.cloudflare.com/">Cloudfare</a> del cual probablemente hablaré más adelante.</p>

<p><strong>Y listo!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cómo desarrollar la cultura perfecta para comenzar una Startup]]></title>
    <link href="http://blog.jinme.org/2013/08/23/como-desarrollar-la-cultura-perfecta-para-comenzar-una-startup/"/>
    <updated>2013-08-23T10:02:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/23/como-desarrollar-la-cultura-perfecta-para-comenzar-una-startup</id>
    <content type="html"><![CDATA[<h3>Qué hace a un equipo poderoso?</h3>

<p>Esta es una breve introducción con <strong>infografía incluida</strong> sobre cómo desarrollar esa cultura de arranque en una Startup.</p>

<!--more-->


<p>Un buen inicio es sinónimo de <strong>grandes personas</strong>. Por la gente, nos referimos a la <em>gente feliz</em>. Su conexión con la puesta en marcha está tan profundamente arraigada que pueden invertir interminables horas de trabajo. Pero, ¿cómo puede un fundador de una Startup asegurarse de que el equipo le tiene el cariño suficiente al producto que están construyendo? Cuando se trata de fomentar la <strong>cultura de arranque</strong>, no se trata sólo de tener mesas de futbolín, grifos de cerveza, Macs o Raspberry Pi. Está en hacer que la gente se de cuenta de la importancia de su trabajo, la puesta en marcha y que son parte de algo «perturbadoramente increible».</p>

<p><strong>Cada problema tiene o tendrá una Startup</strong>. Cada Startup trabaja para hacer algo bueno por el planeta. Un hombre solo no puede hacer eso, se necesita de un equipo para apoyarlo. <strong>Un buen equipo</strong> no tiene precio para una Startup. Conexiones entre equipos, medio ambiente, cohesión <em>(por supuesto)</em>, grandes espacios de oficinas, <strong>Hacking Day</strong>, lluvia de ideas, aperitivos y comidas gratuitas, grandes políticas para las vacaciones y mucho más puede ayudar a <strong>darle un respiro</strong> a la puesta en marcha de tu Startup.</p>

<p><img src="https://s3.amazonaws.com/uploads.startups.fm/wp-content/uploads/2013/Infographics/startup-culture.jpg"></p>

<p>Traducción «libre» del artículo <a href="http://startups.fm/2013/07/31/what-makes-a-powerpacked-team-our-presentation-on-how-to-develop-that-right-startup-culture.html">original</a> <em>en ingles</em> de Startups.fm</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Neo4j en 3 pasos]]></title>
    <link href="http://blog.jinme.org/2013/08/21/neo4j-en-3-pasos/"/>
    <updated>2013-08-21T12:04:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/21/neo4j-en-3-pasos</id>
    <content type="html"><![CDATA[<p><strong>No todo es SQL</strong>. De hecho existen unas joyas de bases de datos como <a href="http://www.neo4j.org/">Neo4j</a>: NoSQL y orientada a grafos.
Parece complicado pero no lo es; de hecho <a href="http://es.wikipedia.org/wiki/NoSQL">NOSQL</a> es un reciente paradigma en el ámbito de las bases de datos.
Para entender mejor que son bases de datos orientadas a grafos Ian Robinson <em>(director de Neo Technology)</em> lo explica en éste vídeo, luego la guía para instalar <strong>Neo4j</strong>.</p>

<!--more-->




<div class="embed-video-container"><iframe src="http://player.vimeo.com/video/56043918 " frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></div>


<h2>Guía de instalación</h2>

<p>Básicamente son tres pasos:</p>

<ol>
<li><a href="http://www.neo4j.org/download">Bajar</a> la última versión de Neo4j.</li>
<li>Extraer el contenido del archivo comprimido.</li>
<li>Ejecutar el <em>script</em> correspondiente <code>$directorio/de/neo4j/bin/neo4j start</code></li>
</ol>


<p>¿Difícil? <strong>Verdad que no</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tu logo CopyLeft con CSS]]></title>
    <link href="http://blog.jinme.org/2013/08/21/tu-logo-copyleft-con-css/"/>
    <updated>2013-08-21T09:50:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/21/tu-logo-copyleft-con-css</id>
    <content type="html"><![CDATA[<p>La mayoría de las cosas que comparto son de dominio público, y si hay algo que detesto es el asunto del Copyright, más aún cuando no <del>tengo</del> tenia un logo para mostrar el CopyLeft.
Pensado en CSS3 se me ocurrió crear este <em>pedazo</em> de código para crear el CopyLeft en HTML5 <strong>sin usar imágenes</strong> que ahora les comparto. Puro código libre.</p>

<!--more-->


<h2>HTML5</h2>

<p>Lo primero es tener el texto de tu CopyLeft, que por ahora será el carácter <strong>©</strong>, o sea el del Copyright, que colocaremos en un <code>span</code> e identificaremos con una clase.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;copyleft-symbol&quot;</span><span class="nt">&gt;</span>©<span class="nt">&lt;/span&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CSS3</h2>

<p>A continuación agregamos a nuestra hoja de estilos el nombre de la clase asignada al <code>span</code> y el código que transformará el carácter a CopyLeft.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.copyleft-symbol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">transform</span><span class="o">:</span> <span class="n">rotate</span><span class="p">(</span><span class="m">180</span><span class="n">deg</span><span class="p">);</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">transform</span><span class="o">:</span> <span class="n">rotate</span><span class="p">(</span><span class="m">180</span><span class="n">deg</span><span class="p">);</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">transform</span><span class="o">:</span> <span class="n">rotate</span><span class="p">(</span><span class="m">180</span><span class="n">deg</span><span class="p">);</span>
</span><span class='line'>  <span class="n">filter</span><span class="o">:</span> <span class="n">progid</span><span class="o">:</span><span class="n">DXImageTransform</span><span class="o">.</span><span class="n">Microsoft</span><span class="o">.</span><span class="n">BasicImage</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="m">2</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como verán insertamos código para que sea compatible con todos los navegadores, incluso IE que utiliza un <strong>filtro</strong> especial.
Si quieren ver como funciona, vayan el final de la página y se mostrará el logo CopyLeft activado. Espero les haya gustado este <em>snippet</em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Instalando y configurando Octopress]]></title>
    <link href="http://blog.jinme.org/2013/08/19/instalando-y-configurando-octopress/"/>
    <updated>2013-08-19T11:07:00-04:30</updated>
    <id>http://blog.jinme.org/2013/08/19/instalando-y-configurando-octopress</id>
    <content type="html"><![CDATA[<p>Luego de años sin blog, debido a la perdida de <a href="http://matandotigres.wordpress.com">MatandoTigres</a> he decidido retornar con un espacio renovado.
Esta semana, intentando abordar excelentes lenguajes como Ruby y <em>auto-obligado</em> a usar Git he decidido montar este nuevo Blog en <a href="https://github.com/">Github</a> usando una excelente herramienta desarrollada en Software Libre llamada <a href="http://octopress.org/">Octopress</a>.
Que mejor manera de comenzar explicando como instalar y configurar Octopress, un <em>framework de blogging para hackers</em>.
<strong>Manos a la obra entonces!</strong></p>

<!--more-->


<h2>Instalación</h2>

<p>Aclaro que todo el procedimiento lo realicé con la distribución <a href="http://crunchbang.org/">Crunchbang</a> por lo cual debería funcionar con cualquiera basada en <strong>Debian</strong>.
Simplemente debemos usar la consola <em>(terminal)</em> para ejecutar ciertos comandos.</p>

<p>Lo primero es instalar Git.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo aptitude install git
</span></code></pre></td></tr></table></div></figure>


<p>También debemos tener instalado Ruby, para ello usaremos <strong>RVM (Ruby Version Manager)</strong> que me parece el más completo y a <em>prueba-de-fallos</em>, lo bajamos como sigue.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://get.rvm.io | bash -s stable --ruby
</span></code></pre></td></tr></table></div></figure>


<p>Luego instalaremos específicamente la <strong>versión 1.9.3</strong> de Ruby, que es la que <em>exige</em> Octopress.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm install 1.9.3
</span><span class='line'><span class="nv">$ </span>rvm use 1.9.3
</span><span class='line'><span class="nv">$ </span>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<p><strong>Ejecuta</strong> <code>ruby --version</code> para asegurarte que estas usando la versión Ruby 1.9.3.</p>

<p>Lo siguiente es hacer un <em>fork</em> de Octopress en nuestro computador.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<p>Para finalizar la instalación instalamos las dependencias</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>E instalamos el tema por defecto. <strong>Sí,</strong> Octopress tiene variados temas para usar.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake install
</span></code></pre></td></tr></table></div></figure>


<h2>Configuración</h2>

<p>Aunque no lo crean, llegamos a la <strong>parte fácil</strong>, configurar Octopress solo requiere editar el archivo <code>_config.yml</code> que se encuentra en la raíz del directorio del framework.
Acá ud puede cambiar el <code>url</code>, <code>title</code>, <code>subtitle</code>, <code>permalink</code>, <code>twitter_account</code> e incluso comentarios vía <a href="http://disqus.com/">disqus</a> provista por <code>disqus_short_name</code>.
Les dejo una breve descripción (en español) de algunas variables.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>url:                <span class="c"># Dirección URL para reescritura de RSS, etc</span>
</span><span class='line'>title:              <span class="c"># Usado en la cabecera y las etiquetas de titulo</span>
</span><span class='line'>subtitle:           <span class="c"># Descripción usada en la cabecera del sitio</span>
</span><span class='line'>author:             <span class="c"># Tu nombre, para RSS, Copyright, Metadata</span>
</span><span class='line'>simple_search:      <span class="c"># Buscador utilizado para realizar las busquedas (claro!)</span>
</span><span class='line'>description:        <span class="c"># Una meta-descripción de tu blog, para indexar el sitio</span>
</span><span class='line'>date_format:        <span class="c"># Formato de fecha usado por la función strftime de Ruby</span>
</span><span class='line'>subscribe_rss:      <span class="c"># Dirección URL para los feeds del blog, por defecto usa /atom.xml</span>
</span><span class='line'>subscribe_email:    <span class="c"># Dirección URL para suscribir por correo electrónico (requiere el servicio)</span>
</span><span class='line'>category_feeds:     <span class="c"># Habilita los feeds RSS por categoria (por defecto está desactivado)</span>
</span><span class='line'>email:              <span class="c"># Correo electrónico para los feeds del RSS, si lo deseas.</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Eso es todo amigos.</strong> Para finalizar solo me queda indicarles que existen muchos <em>plugins</em> de <a href="http://octopress.org/docs/blogging/plugins/">terceros</a> para usar con este poderoso framework, solo queda instalar y probar.
Seguramente en próximos artículos estaré escribiendo sobre éste y otros temas relacionados. Espero por lo pronto que te haya sido útil el breve tutorial y <strong>comiences con tu blog</strong>!</p>
]]></content>
  </entry>
  
</feed>
